name: "Load Secrets from GCP and Encrypt"

inputs:
  secrets:
    required: true
    type: string

  service_account:
    required: true
  
  workload_identity_provider:
    required: true
  
  project_id:
    required: true
  
  encryption_key:
    required: true
        
runs:
  using: composite

  steps:
    - name: GCP authentication
      uses: google-github-actions/auth@v2
      with:
        service_account: ${{ inputs.service_account }}
        workload_identity_provider: ${{ inputs.workload_identity_provider}}
    
    # Format: output_name:secret_name
    - id: parse_inputs
      name: Parse multiline input with secret names
      run: |-
        keys=""

        while IFS= read -r line; do
          output_name=$(echo "$line" | cut -d ':' -f 1)
          secret_name=$(echo "$line" | cut -d ':' -f 2-)
          keys="${keys}${output_name}:${{ inputs.project_id }}/${secret_name}\n"
        done <<< "${{ inputs.secrets }}"
          
        echo "keys<<EOF" >> "$GITHUB_OUTPUT"
        echo -e "${keys%\\n}" >> "$GITHUB_OUTPUT"
        echo "EOF" >> "$GITHUB_OUTPUT"
        
    - id: fetch_secrets
      name: Fetch secrets
      uses: google-github-actions/get-secretmanager-secrets@v2
      with:
        secrets: ${{ steps.parse_inputs.outputs.keys }}
    
    - id: encrypt_secrets
      name: Encrypt secrets
      run: |
        fetched_secrets='${{ toJson(steps.fetch_secrets.outputs) }}'
        encrypted_secrets=$(echo -n "$fetched_secrets" | openssl enc -aes-256-cbc -salt -pbkdf2 -k "${{ inputs.encryption_key }}" | base64 -w0)
        echo "encrypted_secrets=${encrypted_secrets}" >> "$GITHUB_OUTPUT"

outputs:
  secrets: ${{ steps.encrypt_secrets.outputs.encrypted_secrets }}