name: "Load Secrets from GCP"

inputs:
  secrets:
    required: true
    type: string
  
  target_directory:
    required: false
    type: string
    default: /home/runner/.ssh/git-keys
  
  project_id:
    required: true
        
runs:
  using: composite

  steps:
    # Format: output_name:secret_name
    - id: parse_inputs
      name: Parse multiline input with secret names
      run: |-
        keys=""

        while IFS= read -r line; do
          output_name=$(echo "$line" | cut -d ':' -f 1)
          secret_name=$(echo "$line" | cut -d ':' -f 2-)
          keys="${keys}${output_name}:${{ inputs.project_id }}/${secret_name}\n"
        done <<< "${{ inputs.secrets }}"
          
        echo "keys<<EOF" >> "$GITHUB_OUTPUT"
        echo -e "${keys%\\n}" >> "$GITHUB_OUTPUT"
        echo "EOF" >> "$GITHUB_OUTPUT"
        
    - id: fetch_secrets
      name: Fetch secrets
      uses: google-github-actions/get-secretmanager-secrets@v2
      with:
        secrets: ${{ steps.parse_inputs.outputs.keys }}
    
    - id: place_secrets
      name: Place secrets
      run: |-
        mkdir -p ${{ inputs.target_directory }}
        secret_paths=""
        fetched_secrets='${{ toJson(steps.fetch_secrets.outputs) }}'

        while IFS= read -r entry; do
          key=$(echo "$entry" | jq -r '.key')
          value=$(echo "$entry" | jq -r '.value')

          echo "$value" | tr -d '\r' > "${{ inputs.target_directory }}/$key"
          chmod 600 "${{ inputs.target_directory }}/$key"

          secret_paths="${secret_paths}${key}=${{ inputs.target_directory }}/$key\n"
        done < <(echo "$fetched_secrets" | jq -c 'to_entries[]')

        echo "secret_paths<<EOF" >> "$GITHUB_OUTPUT"
        echo -e "${secret_paths%\\n}" >> "$GITHUB_OUTPUT"
        echo "EOF" >> "$GITHUB_OUTPUT"

outputs:
  secret_paths: ${{ steps.place_secrets.outputs.secret_paths }}