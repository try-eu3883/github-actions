name: "Build and Deploy to Cloud Run with SDK (Python)"

on:
  workflow_call:
    inputs:

      repo:
        required: true
        type: string

      image:
        required: true
        type: string
      
      tag:
        required: false
        type: string
        default: latest
      
      region:
        required: false
        type: string
        default: us-central1
      
      registry:
        required: false
        type: string
        default: us-docker.pkg.dev
      
      build_args:
        required: false
        type: string
      
      # attach_sdk_secrets:
      #   required: false
      #   type: boolean
      #   default: false
      
      ssh_keys:
        required: false
        type: string
    
    secrets:
      service_account:
        required: true
      
      workload_identity_provider:
        required: true
      
      project_id:
        required: true
      
      encryption_key:
        required: true

env:
  PROJECT_ID: ${{ secrets.project_id }}
  REGION: ${{ inputs.region }}
  REPO: ${{ inputs.repo }}
  IMAGE: ${{ inputs.image }}
  DOCKER_TAG: ${{ inputs.tag }}
  REGISTRY: ${{ inputs.registry }}

jobs:
  build-and-deploy:
    permissions:
      contents: 'read'
      id-token: 'write'
      
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: GCP authentication
        uses: google-github-actions/auth@v2
        with:
          service_account: ${{ secrets.service_account }}
          workload_identity_provider: ${{ secrets.workload_identity_provider }}
      
      - name: Configure Docker for GCP
        run: gcloud auth configure-docker ${{ env.REGISTRY }} --quiet
        
      # - id: secret_manager
      #   name: Get deploy keys for private packages
      #   if: ${{ inputs.attach_sdk_secrets }}
      #   uses: google-github-actions/get-secretmanager-secrets@v2
      #   with:
      #     secrets: |-
      #       token_sdk:${{ env.PROJECT_ID }}/sdk-deploy-key
      #       token_ow:${{ env.PROJECT_ID }}/ormwtf-deploy-key
        
      # - name: Set SSH key for SDK
      #   if: ${{ inputs.attach_sdk_secrets }}
      #   run: |-
      #     mkdir /home/runner/.ssh /home/runner/.ssh/git-keys
      #     echo "${{ steps.secret_manager.outputs.token_sdk }}" >> /home/runner/.ssh/git-keys/try-eu3883-hh-engine
      #     echo "${{ steps.secret_manager.outputs.token_ow }}" >> /home/runner/.ssh/git-keys/Misery7100-ormwtf
      #     find /home/runner/.ssh/git-keys/ -type f -name "*" -exec chmod 600 {} +


      - name: Set up SSH keys
        id: set_up_ssh_keys
        run: |-
          mkdir /home/runner/.ssh /home/runner/.ssh/git-keys
          ssh_keys_paths=""

          while IFS= read -r line; do
            PATH="${line%%=*}"
            VALUE=$(echo -n "${line#*=}" | base64 -d | gpg --decrypt --quiet --batch --passphrase ${{ secrets.encryption_key }} --output -)
            echo "$VALUE" >> /home/runner/.ssh/git-keys/$PATH
            ssh_keys_path="${ssh_keys_path}${PATH}=/home/runner/.ssh/git-keys/${PATH}\n"
          done <<< "${{ inputs.ssh_keys }}"

          echo "ssh_keys_path=${ssh_keys_path}" >> "$GITHUB_OUTPUT"
          find /home/runner/.ssh/git-keys/ -type f -name "*" -exec chmod 600 {} +

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ github.ref }}-
        
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE }}:${{ env.DOCKER_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
          build-args: |
            GITHUB_SHA=${{ github.sha }}
            GITHUB_REF=${{ github.ref }}
            ${{ inputs.build_args || '' }}
          ssh: |
            ${{ steps.set_up_ssh_keys.outputs.ssh_keys_path }}
      
      - name: Deploy Cloud Run Revision
        run: |-
          gcloud run deploy ${{ env.IMAGE }} \
            --image ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE }}:${{ env.DOCKER_TAG }} \
            --region ${{ env.REGION }}
      
      - name: Clean up secret files
        run: |
          rm -rf /home/runner/.ssh/git-keys